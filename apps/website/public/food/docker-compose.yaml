services:
  web-app:
    container_name: web-app
    image: ghcr.io/next-orders/food/web-app:${VERSION}
    ports:
      - 3000:3000
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - food-storage:/app/.storage
    depends_on:
      - db
    networks:
      - food
    labels:
      - traefik.enable=true
      - traefik.http.routers.web-app.rule=Host(`${DOMAIN_NAME}`)
      - traefik.http.routers.web-app.entrypoints=websecure
      - traefik.http.routers.web-app.tls.certresolver=myresolver

  db:
    container_name: db
    image: postgres:17
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - food

  reverse-proxy:
    container_name: traefik
    image: traefik:v3.3
    restart: on-failure
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - '--entryPoints.web.address=:80'
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      - '--entryPoints.websecure.address=:443'
      - --certificatesresolvers.myresolver.acme.httpchallenge=true
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.myresolver.acme.email=${EMAIL}
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
    ports:
      - 80:80
      - 443:443
    volumes:
      - certs:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - food

volumes:
  food-storage:
  db:
  certs:

networks:
  food:
    name: food
    driver: bridge
