generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Channel {
  id           String     @id
  createdAt    DateTime   @default(now()) @map("created_at")
  updatedAt    DateTime   @default(now()) @map("updated_at")
  slug         String
  name         String
  description  String?
  currencyCode String     @map("currency_code")
  menus        Menu[]
  products     Product[]
  checkouts    Checkout[]

  @@map("channel")
}

model Menu {
  id         String         @id
  createdAt  DateTime       @default(now()) @map("created_at")
  updatedAt  DateTime       @default(now()) @map("updated_at")
  slug       String
  name       String
  channelId  String         @map("channel_id")
  channel    Channel        @relation(fields: [channelId], references: [id])
  categories MenuCategory[]

  @@map("menu")
}

model MenuCategory {
  id        String    @id
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @map("updated_at")
  slug      String
  name      String
  menuId    String    @map("menu_id")
  menu      Menu      @relation(fields: [menuId], references: [id])
  products  Product[]

  @@map("menu_category")
}

model Product {
  id                     String           @id
  createdAt              DateTime         @default(now()) @map("created_at")
  updatedAt              DateTime         @default(now()) @map("updated_at")
  slug                   String
  name                   String
  description            String
  isAvailableForPurchase Boolean          @default(true) @map("is_available_for_purchase")
  channelId              String           @map("channel_id")
  channel                Channel          @relation(fields: [channelId], references: [id])
  categoryId             String           @map("category_id")
  category               MenuCategory     @relation(fields: [categoryId], references: [id])
  variants               ProductVariant[]

  @@map("product")
}

model ProductVariant {
  id            String         @id
  createdAt     DateTime       @default(now()) @map("created_at")
  updatedAt     DateTime       @default(now()) @map("updated_at")
  weightUnit    String         @default("G") @map("weight_unit")
  weightValue   Float          @map("weight_value")
  gross         Float
  net           Float?
  productId     String         @map("product_id")
  product       Product        @relation(fields: [productId], references: [id])
  checkoutLines CheckoutLine[]

  @@map("product_variant")
}

model Checkout {
  id             String         @id
  createdAt      DateTime       @default(now()) @map("created_at")
  updatedAt      DateTime       @default(now()) @map("updated_at")
  deliveryMethod String         @map("delivery_method")
  totalPrice     Float          @default(0) @map("total_price")
  discount       Float?
  channelId      String         @map("channel_id")
  channel        Channel        @relation(fields: [channelId], references: [id])
  lines          CheckoutLine[]

  @@map("checkout")
}

model CheckoutLine {
  id                     String         @id
  createdAt              DateTime       @default(now()) @map("created_at")
  updatedAt              DateTime       @default(now()) @map("updated_at")
  quantity               Int            @default(1)
  unitPrice              Float          @default(0) @map("unit_price")
  undiscountedUnitPrice  Float          @default(0) @map("undiscounted_unit_price")
  totalPrice             Float          @default(0) @map("total_price")
  undiscountedTotalPrice Float          @default(0) @map("undiscounted_total_price")
  isGift                 Boolean        @default(false) @map("is_gift")
  checkoutId             String         @map("checkout_id")
  checkout               Checkout       @relation(fields: [checkoutId], references: [id])
  productVariantId       String         @map("product_variant_id")
  variant                ProductVariant @relation(fields: [productVariantId], references: [id])

  @@map("checkout_line")
}
